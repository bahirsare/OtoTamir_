@model ListClientDTO
@{
    ViewData["Title"] = "Yeni İşlem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["FailMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["FailMessage"]
    </div>
}
@if (TempData["Message"] != null)
{
    <div class="alert alert-info">
        @TempData["Message"]
    </div>
}

<section class="content">
    
    <div class="container-fluid">
        <div class="card card-primary card-outline">
            <div class="card-header d-flex justify-content-between align-items-center">
                
                <div>
                    <form method="post" asp-action="GetVehiclesByClientId">
                    <label for="clientSelect" class="form-label">Müşteri Seç</label>
                    <select class="form-select d-inline w-auto me-2" id="clientSelect" name="SelectedClientId">
                        <option selected disabled>Müşteri Seçiniz</option>
                        @foreach(var item in Model.Clients)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }                      
                    </select>
                    <button class="btn btn-primary" type="submit">
                        Listele
                    </button>
                    </form>

                    
                </div>
                <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createClientModal">
                    <i class="bi bi-plus-circle"></i> Yeni Müşteri Ekle
                </a>
                
            </div>

            
        </div>
        
       
      
        
        @if (Model.SelectedClientId != null && Model.SelectedClientId!=0)
        {
            @await Component.InvokeAsync("_CardClientViewComponentPartial", Model.SelectedClientId)
            @await Component.InvokeAsync("_ListVehicleViewComponentPartial", Model.SelectedClientId)
            <div class="modal fade" id="createVehicleModal-@Model.SelectedClientId" tabindex="-1" aria-labelledby="createVehicleModalLabel" aria-hidden="true">
                @await Component.InvokeAsync("_CreateVehicleViewComponentPartial", new CreateVehicleDTO { ClientId = (int)Model.SelectedClientId, ReturnUrl = "ServiceRecord/Index" })
            </div>

        }
        
       
       
    </div>
    <div class="modal fade" id="createClientModal" tabindex="-1" aria-labelledby="createClientModalLabel" aria-hidden="true">
        @await Component.InvokeAsync("_CreateClientViewComponentPartial","/ServiceRecord/Index")
    </div>

</section>
<script src="~/js/serviceRecord.js"></script>




