@model ListServiceRecordsDTO
@{
    ViewData["Title"] = "Devam Eden İşlemler";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .bg-pastel-blue {
        background-color: #E6F0FA !important;
        color: #333;
    }

    .bg-pastel-yellow {
        background-color: #FFF7E6 !important;
    }

    .bg-pastel-green {
        background-color: #E6F7E6 !important;
    }

    .bg-pastel-red {
        background-color: #FDE6E6 !important;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .table td, .table th {
        vertical-align: middle;
    }

    .table-responsive {
        max-height: 600px;
    }

    .table thead {
        position: sticky;
        top: 0;
        background: white;
        z-index: 10;
    }

    .table tbody tr.bg-pastel-yellow > td {
        background-color: #FFF7E6 !important;
    }

    .table tbody tr.bg-pastel-green > td {
        background-color: #E6F7E6 !important;
    }

    .table tbody tr.bg-pastel-red > td {
        background-color: #FDE6E6 !important;
    }

    .sortable:hover {
        background-color: #f8f9fa;
    }
</style>

<section class="content">
    <div class="container-fluid">
        <!-- Filtre Kartı (ViewComponent olarak değiştirilebilir) -->
        <div class="card mb-3">
            <div class="card-header bg-pastel-blue d-flex justify-content-between">
                <h3 class="card-title"><i class="fas fa-filter me-2"></i>Servis Kaydı Filtreleme</h3>
                <div>
                    <a asp-action="ExportExcel" asp-all-route-data="@Context.Request.Query"
                       class="btn btn-sm btn-success">
                        <i class="fas fa-file-excel"></i> Excel
                    </a>
                </div>
            </div>
            <div class="card-body">
                <form id="filterForm" class="row g-3 align-items-end">
                    @Html.AntiForgeryToken()
                    <div class="col-md-3">
                        <label for="clientName" class="form-label">Müşteri Adı</label>
                        <input type="text" class="form-control" id="clientName" name="ClientName"
                               value="@Model.ClientName" placeholder="Müşteri adıyla ara" />
                    </div>
                    <div class="col-md-2">
                        <label for="status" class="form-label">Durum</label>
                        <select class="form-select" id="status" name="CurrentStatus">
                            <option value="">Tümü</option>
                            <option value="Devam Ediyor" selected="@(Model.CurrentStatus == "Devam Ediyor")">Devam Eden</option>
                            <option value="Tamamlandı" selected="@(Model.CurrentStatus == "Tamamlandı")">Tamamlanmış</option>
                            <option value="İptal Edildi" selected="@(Model.CurrentStatus == "İptal Edildi")">İptal Edilmiş</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label for="startDate" class="form-label">Başlangıç Tarihi</label>
                        <input type="date" class="form-control" id="startDate" name="StartDate"
                               value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-2">
                        <label for="endDate" class="form-label">Bitiş Tarihi</label>
                        <input type="date" class="form-control" id="endDate" name="EndDate"
                               value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-3 d-flex align-items-end gap-2">
                        <button type="submit" class="btn btn-dark flex-grow-1">
                            <i class="fas fa-search"></i> Filtrele
                        </button>
                        <button type="button" id="bulkCompleteBtn" class="btn btn-success" disabled>
                            <i class="fas fa-check"></i> Toplu İşlem
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Liste Kartı -->
        <div class="card">
            <div class="card-header bg-pastel-blue d-flex justify-content-between">
                <h3 class="card-title"><i class="fas fa-wrench me-2"></i>Servis Kayıtları</h3>
                <div class="btn-group">
                    <button class="btn btn-sm btn-outline-secondary" onclick="sortTable('CreatedDate', true)">
                        <i class="fas fa-arrow-down"></i> Yeniden Eskiye
                    </button>
                    <button class="btn btn-sm btn-outline-secondary" onclick="sortTable('CreatedDate', false)">
                        <i class="fas fa-arrow-up"></i> Eskiden Yeniye
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                <div id="recordsTable">
                    @await Html.PartialAsync("_RecordsTablePartial", Model)
                </div>
            </div>
            <div class="card-footer">
                <div id="paginationContainer">
                    <!-- AJAX ile dolacak -->
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Düzenleme Modali -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="editForm" method="post" asp-action="Edit">
                @Html.AntiForgeryToken()
                <input type="hidden" name="Id" id="editId" />
                <div class="modal-header bg-pastel-blue">
                    <h5 class="modal-title">Servis Kaydını Düzenle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label>Uygulanan İşlem</label>
                        <textarea class="form-control" name="AppliedOperations" id="editOps" rows="3"></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label>Durum</label>
                            <select class="form-select" name="Status" id="editStatus">
                                <option value="Devam Ediyor">Devam Ediyor</option>
                                <option value="Tamamlandı">Tamamlandı</option>
                                <option value="İptal Edildi">İptal Edildi</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label>Tahmini Kalan Gün</label>
                            <input type="number" class="form-control" name="EstimatedDaysLeft" id="editDays" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Kaydet</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // AJAX Filtreleme ve Sıralama
        function loadRecords(page = 1) {
            const formData = $('#filterForm').serialize() + `&page=${page}`;
            $.get('/Service/OngoingPartial', formData, function (data) {
                $('#recordsTable').html(data.table);
                $('#paginationContainer').html(data.pagination);
                initTableEvents();
            });
        }

        // Tablo Sıralama
        function sortTable(column, descending) {
            $('#sortColumn').val(column);
            $('#sortDirection').val(descending ? 'desc' : 'asc');
            loadRecords();
        }

        // Modal Açılışı
        function openEditModal(id) {
            $.get('/Service/GetRecord/' + id, function (data) {
                $('#editId').val(data.id);
                $('#editStatus').val(data.status);
                $('#editOps').val(data.appliedOperations);
                $('#editDays').val(data.estimatedDaysLeft);
                $('#editModal').modal('show');
            });
        }

        // Toplu İşlem
        $('#bulkCompleteBtn').click(function () {
            const selectedIds = $('.record-check:checked').map(function () {
                return $(this).val();
            }).get();

            if (selectedIds.length > 0) {
                $.post('/Service/BulkComplete', { ids: selectedIds }, function () {
                    toastr.success(`${selectedIds.length} kayıt tamamlandı olarak işaretlendi`);
                    loadRecords();
                });
            }
        });

        // Sayfa Yüklendiğinde
        $(document).ready(function () {
            // Dinamik Filtreleme
            $('#filterForm').on('input change', function () {
                loadRecords();
            });

            // Form Submit
            $('#filterForm').submit(function (e) {
                e.preventDefault();
                loadRecords();
            });

            // Edit Form Submit
            $('#editForm').submit(function (e) {
                e.preventDefault();
                $.post(this.action, $(this).serialize(), function () {
                    $('#editModal').modal('hide');
                    toastr.success("Kayıt güncellendi!");
                    loadRecords();
                });
            });

            initTableEvents();
        });

        function initTableEvents() {
            // Checkbox Değişiklikleri
            $('.record-check').change(function () {
                const anyChecked = $('.record-check:checked').length > 0;
                $('#bulkCompleteBtn').prop('disabled', !anyChecked);
            });

            // Tooltip Aktif Etme
            $('[data-bs-toggle="tooltip"]').tooltip();
        }
    </script>
}